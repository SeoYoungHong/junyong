# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
# input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type Todo @model @searchable @auth(rules: [{ allow: owner }]){
  id: ID!
  name: String!
  description: String
}

#DB1
type User @model @auth(rules: [{ allow: owner},{ allow: groups, groups: ["Admin"] }]){
  id: ID! 
  name: String! 
  pw: String!
  sex: String
  birth: AWSDate @auth(rules: [{ allow: owner, operations: [read] }])
  dogs: [Dogs] @hasMany 
}
# DB1-dogs
type Dogs @model @auth(rules: [{ allow: owner},{ allow: groups, groups: ["Admin"] }]){
  user_id : ID!
  id: ID!
  name: String!
  cosmetic_id: [String]
}
#DB2
type Cosmetic @model @searchable @auth(rules: [{ allow: owner },{ allow: groups, groups: ["Admin"] }]){
  id: ID! @primaryKey
  title: String
  ingredient_ids: [CosmeticToIngredient] @hasMany
  info: Info @hasOne
  ingerdients_info: IngerdientsInfo @hasOne
  count_info: CountInfo @hasOne
}
#BD2-info
type Info @model @auth(rules: [{ allow: owner },{ allow: groups, groups: ["Admin"] }]){
  id: ID!
  effect: String
  useage: String
  method: String
  precaution:String 
}
#DB2-ingerdients_info
type IngerdientsInfo @model @auth(rules: [{ allow: owner },{ allow: groups, groups: ["Admin"] }]){
  id: ID!
  ban_count:Int
  restrict_count: Int
  aspca_count: Int
  pph_count: Int
  ewg_count: AWSJSON
}
#DB2-ingerdients_info
type CountInfo @model @auth(rules: [{ allow: owner },{ allow: groups, groups: ["Admin"] }]){
  id: ID!
}
#DB3
type Ingredient @model @auth(rules: [{ allow: owner },{ allow: groups, groups: ["Admin"] }]){
  id: ID!
  apqa_ban: String
  apqa_restrict: String
  aspca: String
  pph: String
  allergy: String
  ewg: AWSJSON
  skincondition: String
  skineffect: String
}
#DB4
type Review @model @auth(rules: [{ allow: owner },{ allow: groups, groups: ["Admin"] }]){
  id: ID!
  review_id: String
  title: String
  content: String 
  user_name: String
  user_id: String
}
#DB5
type DCT @model @auth(rules: [{ allow: owner },{ allow: groups, groups: ["Admin"] }]){
  id: ID!
  title: String
  contnet: String
}
#DB6
type DCTGood @model @auth(rules: [{ allow: owner }, { allow: groups, groups: ["Admin"] }]){
 id: ID!
 content_id:String
 like:Boolean
 trial: Boolean
 user_name: String
 user_id: String
}
#DB7
type Enroll @model @auth(rules: [{ allow: owner }, { allow: groups, groups: ["Admin"] }]){
  id:ID!
  title: String
  user_id: String
  liek: String
  
}
#DB8
type Banner @model @auth(rules: [{ allow: owner}, { allow: groups, groups: ["Admin"]}]){
 id: ID!
 title: String
 img: AWSURL
 link: AWSURL
}
